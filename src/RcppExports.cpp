// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// getACGTN_Sites
List getACGTN_Sites(std::string file, int filter, double gap_thresh, double maf_thresh);
RcppExport SEXP _BacGWES_getACGTN_Sites(SEXP fileSEXP, SEXP filterSEXP, SEXP gap_threshSEXP, SEXP maf_threshSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::string >::type file(fileSEXP);
    Rcpp::traits::input_parameter< int >::type filter(filterSEXP);
    Rcpp::traits::input_parameter< double >::type gap_thresh(gap_threshSEXP);
    Rcpp::traits::input_parameter< double >::type maf_thresh(maf_threshSEXP);
    rcpp_result_gen = Rcpp::wrap(getACGTN_Sites(file, filter, gap_thresh, maf_thresh));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_BacGWES_getACGTN_Sites", (DL_FUNC) &_BacGWES_getACGTN_Sites, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_BacGWES(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
